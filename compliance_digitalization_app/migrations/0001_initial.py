# Generated by Django 3.1.4 on 2020-12-31 10:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(blank=True, choices=[('1', 'Category 1'), ('2', 'Category 2'), ('3', 'Category 3'), ('4', 'Category 4')], max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='InputFramingModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.TextField(null=True, verbose_name='Compliance Statement')),
                ('benchmark', models.CharField(blank=True, max_length=30, null=True)),
                ('source_of_obligation', models.TextField(null=True)),
                ('clause_no', models.CharField(max_length=30, null=True)),
                ('type', models.CharField(choices=[('1', 'Major'), ('2', 'Non Major')], max_length=20, null=True)),
                ('Input_Requirement', models.CharField(choices=[('1', 'Yes/No Statement only'), ('2', 'Yes/No + % Value'), ('3', 'Yes/No + Number'), ('4', 'Yes/No + Date')], max_length=20, null=True)),
                ('proof_of_compliance', models.BooleanField(blank=True, default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='%Y/%m/%d')),
                ('question_note_to_SPOC', models.TextField(blank=True, null=True, verbose_name='Question/Note To SPOC')),
                ('compliance_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.compliancecategory')),
            ],
            options={
                'verbose_name_plural': 'Compliance Framing Modules',
            },
        ),
        migrations.CreateModel(
            name='InputFramingModuleInlineInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_of_SPOC', models.EmailField(max_length=100)),
                ('LM_of_SPOC', models.CharField(max_length=120, null=True)),
                ('email_of_SPOC_LM', models.EmailField(max_length=100)),
                ('assessment_date', models.DateField(null=True)),
                ('assessment_frequency', models.CharField(choices=[('1', 'Daily'), ('2', 'Weekly'), ('3', 'Fortnightly'), ('4', 'Monthly'), ('5', 'Bi-monthly'), ('6', 'Quarterly'), ('7', 'Half-yearly'), ('8', 'Yearly'), ('9', 'As and when required'), ('10', 'Daily checking'), ('11', 'Weekly checking'), ('12', 'Quarterly checking'), ('13', 'Yearly checking')], max_length=120, null=True)),
                ('prior_notification', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], max_length=120, null=True)),
                ('reminder_notification', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], max_length=120, null=True)),
                ('escalation_notification', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], max_length=120, null=True)),
                ('input_module_id', models.IntegerField(blank=True, null=True)),
                ('InputFramingModule_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.inputframingmodule')),
                ('compliance_owner_function', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.complianceowner')),
                ('functional_SPOC', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InputModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compliance_id', models.CharField(blank=True, max_length=100)),
                ('compliance_statement', models.CharField(blank=True, max_length=30)),
                ('compliance_benchmark', models.CharField(blank=True, max_length=30, null=True)),
                ('compliance_question', models.TextField(blank=True, null=True)),
                ('proof_of_compliance', models.FileField(blank=True, null=True, upload_to='%Y/%m/%d')),
                ('current_status', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], max_length=120)),
                ('percentage_rate', models.FloatField(blank=True, max_length=120, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('user_comment', models.TextField(blank=True, null=True)),
                ('manager_comment', models.TextField(blank=True, null=True)),
                ('mitigation_plan_Statement', models.CharField(blank=True, max_length=120, null=True)),
                ('root_cause', models.TextField(blank=True, max_length=2000)),
                ('target_date_of_closure', models.DateField(blank=True, null=True)),
                ('mitigation_plan_validated_by', models.CharField(blank=True, max_length=120)),
                ('objects_status', models.CharField(blank=True, choices=[('1', 'Pending'), ('2', 'Responded')], max_length=120)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateField(blank=True, null=True)),
                ('changed_file', models.BooleanField(blank=True, default=False)),
                ('FramingInline_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.inputframingmoduleinlineinformation')),
                ('compliance_owner_function', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.complianceowner')),
                ('functional_SPOC', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('input_framing_module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.inputframingmodule')),
            ],
            options={
                'verbose_name_plural': 'Compliance Modules',
            },
        ),
        migrations.CreateModel(
            name='NewDirectiveCirculation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directive_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PolicyAdvocacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='QuarterOnQuarter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearMonth', models.DateField()),
                ('CompliancePercentage', models.FloatField(max_length=10)),
                ('NonCompliancePercentage', models.FloatField(max_length=10)),
                ('freeze', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'verbose_name_plural': 'QOQ',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='ResponderInputPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directive_id', models.CharField(blank=True, max_length=100, null=True)),
                ('directive_statement', models.TextField(null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('implementation_date', models.DateField(blank=True, null=True)),
                ('proof_of_completion', models.FileField(blank=True, null=True, upload_to='%Y/%m/%d')),
                ('elements_to_be_complied', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.compliancecategory')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyAdvocacyUploads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, max_length=300)),
                ('file', models.FileField(blank=True, upload_to='%Y/%m/%d')),
                ('input_policy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.policyadvocacy')),
            ],
        ),
        migrations.CreateModel(
            name='NewDirInline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='%Y/%m/%d')),
                ('elements_to_be_complied', models.CharField(blank=True, max_length=100, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('line_item', models.IntegerField(blank=True, default=0, null=True)),
                ('current_status', models.CharField(choices=[('1', 'Pending'), ('2', 'Responded')], max_length=120, null=True)),
                ('new_dir_cir', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.newdirectivecirculation')),
            ],
        ),
        migrations.CreateModel(
            name='NewDirectiveCirculationInlineInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_item', models.CharField(blank=True, max_length=100, null=True)),
                ('email_of_SPOC', models.EmailField(max_length=100)),
                ('LM_of_SPOC', models.CharField(max_length=120, null=True)),
                ('email_of_SPOC_LM', models.EmailField(max_length=100)),
                ('assessment_date', models.DateField(null=True)),
                ('assessment_frequency', models.DateField(max_length=120, null=True)),
                ('prior_notification', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], max_length=120, null=True)),
                ('reminder_notification', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], max_length=120, null=True)),
                ('escalation_notification', models.CharField(max_length=120, null=True)),
                ('directive_owner_function', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.complianceowner')),
                ('functional_SPOC', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('line_num', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.newdirectivecirculation')),
            ],
        ),
        migrations.CreateModel(
            name='MitigationPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, max_length=300)),
                ('file', models.FileField(blank=True, upload_to='%Y/%m/%d')),
                ('input_module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.inputmodule')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentRepositoryUploads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, max_length=300)),
                ('file', models.FileField(blank=True, upload_to='%Y/%m/%d')),
                ('input_audit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.documentrepository')),
            ],
        ),
        migrations.CreateModel(
            name='AuditUploads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, max_length=300)),
                ('file', models.FileField(blank=True, upload_to='%Y/%m/%d')),
                ('input_audit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.auditreport')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='compliance_owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='compliance_digitalization_app.complianceowner'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
